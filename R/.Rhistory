1.1^5
1.01^5
1.01^10
?choose
choose(69, 5) * 26 * 2
install.packages("swirl")
?packages.install
?package.install
?package
install.packages(swirl)
install.packages("swirl")
q()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
library(httr)
bing <- handle("www.bing.com")
p1 <- GET(handle=bing, path="/")
?GET
bing <- handle("cn.bing.com")
p1 <- GET(path="/", handle=bing)
bing <- handle("http://cn.bing.com")
p1 <- GET(path="/", handle=bing)
?fromJSON
library(rJSON)
library(rjson)
?as.data.frame
?ftable
?sample
?factor
?relevel
?as.factor
lirbrary(plyr)
library(plyr)
?mutate
?log
?signif
?exp
?melt
library(reshape2)
?melt
?dcast
?ddply
help(package=data.table)
?mode
1:3
x <- c(1:3)
typeof(x)
class(x)
str(zx)
str(x)
mode(x)
storage.mode(x)
y <- c(1:2,by=0.1)
y
?c
y[3]
y <- seq(1,3)
y
y <- seq(1,3, by=0.2)
y
typeof(y)
mode(y)
storage.mode(y)
x <- seq(1,3)
x
typeof(x)
mode(x)
storage.mode(x)
?seq
typeof(mean())
typeof(mean
)
typeof(sum)
typeof(mean)
typeof(sqrt)
mode(mean)
storage.mode(mean)
?quote
?eval
eval(1+1)
eval(1+1, 2+2)
names(x)
names(y)
x <- 1:3
y <- 1:4
x == y
x & y
x < 1:8
x <- 1:8
x == y
x & y
x <- c("a", "b", "c")
y <- c(x, "d", "e")
y
x %in% y
?data.frame()
data.frame(1, 1:10)
data.frame(1:3, 1:10)
data.frame("a":"j", 1:10)
data.frame(1:10, 11:20, 21:30)
data_frame <- data.frame(1:10, 11:20, 21:30)
names(data_frame) %in%  c("a", "b", "c")
typeof(names(data_frame) %in%  c("a", "b", "c"))
data_frame[, c(T, F, T)]
data_frame[c(T, F, F, F, F, F, F, F, F, F),]
data_frame[c(F, T, F, F, F, F, F, F, F, F),]
?rep
?match
?aggregate
sum(c(T,T,F))
?grepl
?factor
?summarise_each
library(dplyr)
?summarise_each
data <- read.table(file="~/Desktop/machine-learning-ex1/ex1/ex1data1.txt")
View(data)
data <- read.table(file="~/Desktop/machine-learning-ex1/ex1/ex1data1.txt", sep=",")
View(data)
pwd()
getwd()
?read.table
?read.csv
getwd()
getwd()
read.csv("march-machine-learning-mania-2016-v1/RegularSeasonCompactResults.csv")
head(csv)
regular_compact <- read.csv("march-machine-learning-mania-2016-v1/RegularSeasonCompactResults.csv")
head(regular_compact)
str(regular_compact)
View(regular_compact)
summary(regular_compact)
?na
?na.action
mean(is.na(regular_compact$Wteam))
table(is.na(regular_compact$Wteam))
regular_detail <- read.csv("march-machine-learning-mania-2016-v1/RegularSeasonDetailedResults.csv")
head(regular_detail)
str(regular_detail)
team_label <- read.csv("march-machine-learning-mania-2016-v1/Teams.csv")
source('~/.active-rstudio-document', echo=TRUE)
str(season)
tourney_compact <- read.csv("march-machine-learning-mania-2016-v1/TourneyCompactResults.csv")
4:2i
3+2i
3+2*i
dput(season)
?month.name
month.name
pi
?pi
LETTERS
letters
ls()
tourney_compact[4, 3]
tourney_compact[[4, 3]]
tourney_compact[[3]]
any(is.na(regular_compact))
traceback()
?sample
1:254
sample(c(1:254), 254)
getwd()
write.csv
?write.csv
order <- sample(c(1:254), 254)
write.csv(order, "order.csv")
getwd
getwd()
?setdiff
library(MASS) ## a library of example datasets
library(class) ## a library with lots of classification tools
library(kknn) ## knn library
library(kknn) ## knn library
attach(Boston)
n = dim(Boston)[1]
dim(Boston)
head(Boston)
plot(lstat,medv)
train = data.frame(lstat,medv)
data.frame(lstat,medv)
head(data.frame(lstat,medv))
tail(data.frame(lstat,medv))
test = data.frame(lstat,medv)
head(train)
head(test)
ind = order(test[,1])
ind
head(ind)
?order
?kknn
getwd()
?list
library("stringdist", lib.loc="/usr/local/lib/R/site-library")
?amatch
amatch("hello", c("Hello", "hell"))
amatch("hello", c("Hello", "hell"), maxDist=1)
amatch("hello", c("He llo", "hell"), maxDist=1)
amatch("hello", c("He llo"), maxDist=1)
amatch("hello", c("He llo"), maxDist=2)
amatch("hello", c("He llo"), maxDist=3)
amatch("hello", c("He llo"), maxDist=4)
amatch("hello", c("He llo"), maxDist=5)
xx <- c(1,2,3)
rev(xx)
xx
xx[2:3]
stringdist("featureCount", "featurecount")
stringdist("featureCount", "featurecount ")
stringdist("featureCount", "featurecount  ")
stringdist("featureCount", "featurecount    ")
stringdist(c("hello", "world"), c("Hello", "World!"))
stringdist(c("hello", "world"), c("Hello", "World!", "hello"))
return 1,2
return
return(1,2)
list[[1,2], "hello"]
?list
list([1,2,3],2)
list(c("hello"),2)
list(c(1,2,3),2)
list(c(1,2,3),2) * list(c(2,2,2),10)
?mapply
mapply("*", list(c(1,2,3),2), list(c(2,2,2),10))
c(1,2,3) %*% c(1,2,3)
c(1,2,3;4,5,6)
(1,2,3;4,5,6)
[1,2,3]
scale(c(1,2,3))
library(rmarkdown)
library(rmarkdown)
?rmarkdown
source('~/.active-rstudio-document', echo=TRUE)
