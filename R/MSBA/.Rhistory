dim(matrix(as.numeric(test_set_4ridge), nrow=nrow(test_set_4ridge), ncol=ncol(test_set_4ridge)))
XX <- matrix(as.numeric(test_set_4ridge), nrow=nrow(test_set_4ridge), ncol=ncol(test_set_4ridge))
colnames(XX)
summary(XX)
ridge_prediction_RMSE <- function(ridge_model, ridge_set){
ridge_matrix <- matrix(as.numeric(ridge_set), nrow=nrow(ridge_set), ncol=ncol(ridge_set))
colnames(ridge_matrix) <- colnames(ridge_set)
interact_trim <- matrix_product(ridge_matrix, 2:14)
# interact_subtrim <- matrix_product(ridge_matrix, 15:16)
interact_condition <- matrix_product(ridge_matrix, 17:19)
# interact_owner <- matrix_product(ridge_matrix, 20:21)
interact_mileage <- matrix_product(ridge_matrix, 22)
interact_year <- matrix_product(ridge_matrix, 23:45)
# interact_color <- matrix_product(ridge_matrix, 46:60)
interact_displacement <- matrix_product(ridge_matrix, 61:75)
# interact_fuel <- matrix_product(ridge_matrix, 76:79)
# interact_state <- matrix_product(ridge_matrix, 80:131)
# interact_region <- matrix_product(ridge_matrix, 132:141)
# interact_soundsystem <- matrix_product(ridge_matrix, 142:148)
# interact_wheeltype <- matrix_product(ridge_matrix, 149:153)
interact_wheelsize <- matrix_product(ridge_matrix, 154:161)
# interact_featurecount <- matrix_product(ridge_matrix, 162)
# use ridge regression to generate a linear model including interaction terms
RMSE <- mean((predict(ridge_model, cbind(
ridge_matrix[, -c(1, 163)],
interact_trim,
interact_condition,
interact_mileage,
interact_year,
interact_displacement,
interact_wheelsize)) - ridge_matrix[, "price"])^2)^.5
# clean up variables to free memory
rm(interact_trim)
rm(interact_condition)
rm(interact_mileage)
rm(interact_year)
rm(interact_displacement)
rm(interact_wheelsize)
gc()
return(RMSE)
}
test_set <- read.csv("group_test.csv", header = T, sep = ",", na.strings = "unsp",
colClasses=col_classes)
input_data <- read.csv("group_train.csv", header = T, sep = ",", na.strings = "unsp",
colClasses=col_classes)
test_set_4ridge <- test_data_pruning(test_set, input_data, colnames(training_set_4ridge))
rm(test_set)
rm(input_data)
rm(training_set_4ridge)
gc()
RMSE_out <- ridge_prediction_RMSE(ridge_model, test_set_4ridge)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
input_data <- read.csv("group_train.csv", header = T, sep = ",", na.strings = "unsp",
colClasses=col_classes)
training_set_4ridge <- data_pruning(input_data)
rm(input_data)
gc()
RMSE_out <- ridge_prediction_RMSE(ridge_model, training_set_4ridge)
cat("Out of sample RMSE:", RMSE_out)
summary(test_set_4ridge)
summary(matrix(as.numeric(ridge_set), nrow=nrow(ridge_set), ncol=ncol(ridge_set)))
summary(matrix(as.numeric(ridge_set_4ridge), nrow=nrow(ridge_set), ncol=ncol(ridge_set)))
summary(matrix(as.numeric(test_set_4ridge), nrow=nrow(ridge_set), ncol=ncol(ridge_set)))
summary(matrix(as.numeric(test_set_4ridge), nrow=nrow(test_set_4ridge), ncol=ncol(test_set_4ridge)))
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
summary(test_set_4ridge)
summary(training_set_4ridge)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
dim(test_set)
dim(as.matrix(test_set))
as.numeric(NA)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
as.matrix(test_set)
summary(as.matrix(test_set))
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
colnames(test_set)
summary(test_set$wheelSize)
test_set$wheelSize
unique(test_set$wheelSize)
unique(test_set$mileage)
which(is.na(test_set$mileage))
which(is.na(test_set$featureCount))
unique(test_set$featureCount)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r')
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
x, y  <- c(1,2)
(x, y) <- c(1,2)
c(x, y) <- c(1,2)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
X <- matrix(0, nrow=3, ncol=3)
colnames(X) <- c('x1','x2','x3')
X
Y <- X
Y
X[[0]]  <- 1
X[[1]]  <- 1
X
Y
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
summary(test_set_4ridge)
?as.matrix
matrix(as.numeric(test_set_4ridge), ncol=ncol(test_set_4ridge))
summary(test_set_4ridge)
head(test_set_4ridge)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
haed(test_set_4ridge)
head(test_set_4ridge)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
head(test_set_4ridge)
summary(test_set_4ridge)
dim(test_set_4ridge)
source('~/git/git_home/R/MSBA/Predict car price_test.r', echo=TRUE)
RMSE_out <- ridge_prediction_RMSE(ridge_model, test_set_4ridge)
cat("Out of sample RMSE:", RMSE_out)
source('~/git/git_home/R/MSBA/Predict_car_price_TEST_V2.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict_car_price_TEST_V2.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict_car_price_TEST_V2.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict_car_price_TEST_V3.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict_car_price_TEST_V3.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict_car_price_TEST_V3.r', echo=TRUE)
source('~/git/git_home/R/MSBA/Predict_car_price_TEST_V3.r', echo=TRUE)
```{r, echo=FALSE}
library(knitr)
kable(matrix(c("color", "green", "red", "yellow", "...", "..."), nrow=6))
```
library(knitr)
Example <- matrix(c("color", "green", "red", "yellow", "...", "..."), nrow=6)
colnames(Example) <- "Example"
kable(matrix(c("color", "green", "red", "yellow", "...", "..."), nrow=6))
library(knitr)
Example <- matrix(c("color", "green", "red", "yellow", "...", "..."), nrow=6)
colnames(Example) <- "Example"
kable(Example)
library(knitr)
Example <- matrix(c("green", "red", "yellow", "...", "..."), nrow=5)
colnames(Example) <- "color"
kable(Example)
colnames(Example, format="pandoc") <- "color"
library(knitr)
Example <- matrix(c("green", "red", "yellow", "...", "..."), nrow=5)
colnames(Example, format="html") <- "color"
library(knitr)
Example <- matrix(c(
"year",
"trim",
"mileage",
"mileage",
"condition",
"condition",
"mileage",
"year",
"isOneOwner",
"year",
"year",
"year",
"year",
"year",
"year",
"condition",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"displacement",
"year",
"displacement",
"trim",
"displacement",
"year",
"year",
"wheelSize",
"year",
"color",
"featureCount",
"region",
"soundSystem",
"wheelType",
"",
"trim",
"condition",
"isOneOwner",
"soundSystem",
"wheelSize",
"color",
"featureCount",
"region",
"wheelType",
"",
96%,
95%,
92%,
92%,
91%,
90%,
90%,
90%,
89%,
89%,
89%,
89%,
89%,
89%,
89%,
88%,
86%,
85%,
85%,
85%,
84%,
84%,
84%,
84%,
84%),
ncol=3)
colnames(Example) <- c("Predictor 1", "Predictor 2", "Strength")
kable(Example, format="markdown")
detach(knitr)
library(knitr)
Example <- matrix(c(
"year",
"trim",
"mileage",
"mileage",
"condition",
"condition",
"mileage",
"year",
"isOneOwner",
"year",
"year",
"year",
"year",
"year",
"year",
"condition",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"displacement",
"year",
"displacement",
"trim",
"displacement",
"year",
"year",
"wheelSize",
"year",
"color",
"featureCount",
"region",
"soundSystem",
"wheelType",
"",
"trim",
"condition",
"isOneOwner",
"soundSystem",
"wheelSize",
"color",
"featureCount",
"region",
"wheelType",
"",
96%,
95%,
92%,
92%,
91%,
90%,
90%,
90%,
library(knitr)
Example <- matrix(c(
"year",
"trim",
"mileage",
"mileage",
"condition",
"condition",
"mileage",
"year",
"isOneOwner",
"year",
"year",
"year",
"year",
"year",
"year",
"condition",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"mileage",
"displacement",
"year",
"displacement",
"trim",
"displacement",
"year",
"year",
"wheelSize",
"year",
"color",
"featureCount",
"region",
"soundSystem",
"wheelType",
"",
"trim",
"condition",
"isOneOwner",
"soundSystem",
"wheelSize",
"color",
"featureCount",
"region",
"wheelType",
"",
"96%",
"95%",
"92%",
"92%",
"91%",
"90%",
"90%",
"90%",
"89%",
"89%",
"89%",
"89%",
"89%",
"89%",
"89%",
"88%",
"86%",
"85%",
"85%",
"85%",
"84%",
"84%",
"84%",
"84%",
"84%"),
ncol=3)
colnames(Example) <- c("Predictor 1", "Predictor 2", "Strength")
kable(Example, format="markdown")
Example <- matrix(c(TRUE, FALSE, FALSE, "...", "...",
FALSE, TRUE, FALSE, "...", "...",
FALSE, FALSE, TRUE, "...", "...",
"...", "...", "...", "...", "..."),
nrow=5)
colnames(Example) <- c("color: green", "color: red", "color: yellow", "...")
kable(Example, format="markdown")
View(scaling_data)
out_data <- read.csv("Cars_X_out.csv",
header=T,
sep=",",
na.strings="unsp",
colClasses=col_classes)
col_classes <- c("factor",
"character",
"character",
"character",
"character",
"numeric",
"character",
"character",
"character",
"character",
"character",
"character",
"character",
"character",
"character",
"numeric"
)
out_data <- read.csv("Cars_X_out.csv",
header=T,
sep=",",
na.strings="unsp",
colClasses=col_classes)
col_classes <- c("factor",
"character",
"character",
"character",
"character",
"numeric",
"character",
"character",
"character",
"character",
"character",
"character",
"character",
"character",
"character",
"numeric"
)
out_data <- read.csv("Cars_X_out.csv",
header=T,
sep=",",
na.strings="unsp",
colClasses=col_classes)
out_data <- cbind(out_data, 0)
View(lasso_prediction_RMSE)
View(out_data)
View(out_data)
col_classes <- c("factor",
"character",
"character",
"character",
"character",
"numeric",
"character",
"character",
"character",
"character",
"character",
"character",
"character",
"character",
"character",
"numeric"
)
out_data <- read.csv("Cars_X_out.csv",
header=T,
sep=",",
na.strings="unsp",
colClasses=col_classes)
out_data <- cbind(out_data, 0)
colnames(out_data)[ncol(out_data)] <- "price"
lasso_prediction <- function(lasso_model, lasso_set, raw_data){
lasso_matrix <- matrix(as.numeric(lasso_set), ncol=ncol(lasso_set))
colnames(lasso_matrix) <- colnames(lasso_set)
displacement_col <- 61:75
year_col <- 23:45
trim_col <- 2:14
mileage_col <- 22
condition_col <- 17:19
wheelSize_col <- 154:161
isOneOwner_col <- 20:21
color_col <- 46:60
featureCount_col <- 162
region_col <- 132:141
soundSystem_col <- 142:148
wheelType_col <- 149:153
interact_terms <- cbind(
displacement_year <- matrix_product(lasso_matrix, displacement_col, year_col),
year_trim <- matrix_product(lasso_matrix, year_col, trim_col),
displacement_mileage <- matrix_product(lasso_matrix, displacement_col, mileage_col),
trim_mileage <- matrix_product(lasso_matrix, trim_col, mileage_col),
displacement_condition <- matrix_product(lasso_matrix, displacement_col, condition_col),
year_condition <- matrix_product(lasso_matrix, year_col, condition_col),
year_mileage <- matrix_product(lasso_matrix, year_col, mileage_col),
wheelSize_year <- matrix_product(lasso_matrix, wheelSize_col, year_col),
year_isOneOwner <- matrix_product(lasso_matrix, year_col, isOneOwner_col),
color_year <- matrix_product(lasso_matrix, color_col, year_col),
featureCount_year <- matrix_product(lasso_matrix, featureCount_col, year_col),
region_year <- matrix_product(lasso_matrix, region_col, year_col),
soundSystem_year <- matrix_product(lasso_matrix, soundSystem_col, year_col),
wheelType_year <- matrix_product(lasso_matrix, wheelType_col, year_col),
trim_condition <- matrix_product(lasso_matrix, trim_col, condition_col),
condition_mileage <- matrix_product(lasso_matrix, condition_col, mileage_col),
isOneOwner_mileage <- matrix_product(lasso_matrix, isOneOwner_col, mileage_col),
soundSystem_mileage <- matrix_product(lasso_matrix, soundSystem_col, mileage_col),
wheelSize_mileage <- matrix_product(lasso_matrix, wheelSize_col, mileage_col),
color_mileage <- matrix_product(lasso_matrix, color_col, mileage_col),
featureCount_mileage <- matrix_product(lasso_matrix, featureCount_col, mileage_col),
region_mileage <- matrix_product(lasso_matrix, region_col, mileage_col),
wheelType_mileage <- matrix_product(lasso_matrix, wheelType_col, mileage_col)
)
raw_data[, "price"] <- predict(lasso_model, cbind(lasso_matrix[, -c(1, 163)],interact_terms))
rm(interact_terms)
gc()
return(raw_data)
}
source('~/.active-rstudio-document', echo=TRUE)
?formatR
formatR
library(formatR)
